{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJSProjects2022\\\\RTW3-Week7-NFT-Marketplace\\\\src\\\\components\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport ethers from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const [data, updateData] = useState([]);\n  const [dataFetched, updatefetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n  async function getNFTData() {\n    const ethers = require(\"ethers\");\n\n    let sumPrice = 0;\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const add = await signer.getAddress();\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n    let transaction = await contract.getMyNFTs();\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: i.image,\n        name: i.name,\n        description: meta.description\n      };\n      return item;\n    }));\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-center flex-col mt-11 md:text-2xl text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"aXfMRyFrZzQr/rv9VDfCqZQ4mw8=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","ethers","Profile","data","updateData","dataFetched","updatefetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","add","getAddress","contract","Contract","abi","transaction","getMyNFTs","items","Promise","all","map","i","tokenURI","tokenId","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","updateFetched","addr","toPrecision","params","length","value","index"],"sources":["C:/ReactJSProjects2022/RTW3-Week7-NFT-Marketplace/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\nimport ethers from \"ethers\";\r\n\r\nexport default function Profile () {\r\n    const [data, updateData] = useState([]);\r\n    const [dataFetched, updatefetched] = useState(false);\r\n    const [address, updateAddress] = useState(\"0x\");\r\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n\r\n    async function getNFTData(){\r\n        const ethers = require(\"ethers\");\r\n        let sumPrice = 0;\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const add = await signer.getAddress();\r\n\r\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\r\n\r\n        let transaction = await contract.getMyNFTs();\r\n\r\n        const items = await Promise.all(transaction.map(async i => {\r\n            const tokenURI = await contract.tokenURI(i.tokenId);\r\n            let meta = await axios.get(tokenURI);\r\n            meta = meta.data;\r\n            let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\r\n            let item = {\r\n                price,\r\n                tokenId: i.tokenId.toNumber(),\r\n                seller: i.seller,\r\n                owner: i.owner,\r\n                image: i.image,\r\n                name: i.name,\r\n                description: meta.description,\r\n            }\r\n            return item;\r\n        }))\r\n        updateData(items);\r\n        updateFetched(true);\r\n        updateAddress(addr);\r\n        updateTotalPrice(sumPrice.toPrecision(3));\r\n    }\r\n\r\n    const params = useParams();\r\n    const tokenId = params.tokenId;\r\n    if(!dataFetched)\r\n        getNFTData(tokenId);\r\n    \r\n    return (\r\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\r\n            <Navbar></Navbar>\r\n            <div className=\"profileClass\">\r\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n                <div className=\"mb-5\">\r\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \r\n                    {address}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n                    <div>\r\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\r\n                        {data.length}\r\n                    </div>\r\n                    <div className=\"ml-20\">\r\n                        <h2 className=\"font-bold\">Total Value</h2>\r\n                        {totalPrice} ETH\r\n                    </div>\r\n            </div>\r\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n                <h2 className=\"font-bold\">Your NFTs</h2>\r\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n                    {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                    })}\r\n                </div>\r\n                <div className=\"mt-10 text-xl\">\r\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}